name: Workflow to trigger ACE unit tests
on:
  workflow_dispatch:
  push:
    branches: [ "mainx" ]
  pull_request:
    branches: [ "mainx" ]
  

jobs:
  build:
    name: Run Unit tests under ACE
    runs-on: ubuntu-latest
    steps:
      - name: Check out code repo
        uses: actions/checkout@v2
        with:
          path: code
          fetch-depth: 0

      - name: checkout wiki
        uses: actions/checkout@v3
        with:
          repository: ${{github.repository}}.wiki
          path: wiki        

      - name: Run the build tests with Docker
        uses: addnab/docker-run-action@v3
        with:          
          image: tdolby/experimental:ace-devcontainer-xvnc-12.0.7.0
          options: --env LICENSE=accept -v ${{ github.workspace }}:/tmp/work/other -w /tmp/work/other/code
          run: |
            # the mqsiprofile command needs to be run with the bash enabled, which conflicts with what a github runner in a container provides
            echo "======================== running from script v1.0 ========================="            
            /tmp/work/other/code/run-script.sh

            retVal=$?
            if [ $retVal -ne 0 ]; then
              exit -1
            fi

            # copy logs to a working area to be picked up by the next step
            mkdir /tmp/work/other/code/trace
            cp /tmp/bdd/FridayApplication-work-dir/config/common/log/integration_server.FridayApplication-work-dir.userTrace.0.txt /tmp/work/other/code/trace/integration_server.FridayApplication-work-dir.userTrace.0.txt

            cd /
            echo "======================== finding cucumber file ========================="
            # find . -name "Cucumber.*"
            
            
      # from 3rd party action need to reset ownership of artefacts across docker containers running      
      # https://github.com/marketplace/actions/reset-workspace-ownership-action
      - name: Get Actions user id
        id: get_uid
        run: |
          actions_user_id=`id -u $USER`
          echo $actions_user_id
          echo "uid=$actions_user_id" >> $GITHUB_OUTPUT

      - name: Correct Ownership in GITHUB_WORKSPACE directory
        uses: peter-murray/reset-workspace-ownership-action@v1
        with:
          user_id: ${{ steps.get_uid.outputs.uid }}

                        
      - name: Process coverage and generate diagrams
        uses: addnab/docker-run-action@v3
        with:
          image: registry-1.docker.io/richardh65/bct-tools-ubuntu:v1
          options: --env LICENSE=accept -v ${{ github.workspace }}:/tmp/work/other -w /tmp/work/other/code
          run: |            
            echo "======================== extracting coverage v1.0 ========================="

            ls -la
            echo "======================== remove local git ========================="
            # rm -rf .git
            echo "======================== remove local git done ========================="

            # Exit on any error
            set -e

            ls -la /tmp/work/other/code/trace

            head -15 /tmp/work/other/code/trace/integration_server.FridayApplication-work-dir.userTrace.0.txt

            echo "======================== start trace file ========================="
            cat /tmp/work/other/code/trace/integration_server.FridayApplication-work-dir.userTrace.0.txt
            echo "======================== end trace file ========================="

            # run the trace ant task - sets up the classpath to make things easier
            /usr/local/ant/apache-ant-1.10.12/bin/ant -f trace_build.xml
            
            # just make sure coverage looks ok
            ls -la /tmp/work/other/code/coveragetemp
            head -30 /tmp/work/other/code/coveragetemp/coverage.xml

            echo "======================== Coverage file ========================="
            cat /tmp/work/other/code/coveragetemp/coverage.xml
            echo "======================== Coverage done ========================="
            
            echo "======================== running sonarqube analysis ========================="

            /usr/local/sonar-scanner/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner -X -Dproject.settings=./sonar-project-tracing.properties
            
            # check generated files
            ls -la /tmp/work/other/code/Github_diagrams

            # just make sure sast looks ok                        
            head -30 BCT_report.sarif


      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: code/BCT_report.sarif
            

      - name: wiki changes
        run: |
          cd wiki
          pwd
          ls -la
          ls -la ../code/Github_diagrams/FridayApplication-1
          echo === copying files====
          cp -R ../code/Github_diagrams/FridayApplication-1/* .
          echo === after copy ====
          ls -la
          # setting up git user to push document changes
          git config user.name testuser
          git config user.email tetsuser@bct.com
          git add . | true
          git add -u
          git commit -m "Updating diagrams"
          git push





           
