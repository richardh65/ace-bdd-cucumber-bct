name: Workflow to trigger ACE unit tests
on:
  workflow_dispatch:
  push:
    branches: [ "mainx" ]
  pull_request:
    branches: [ "mainx" ]
  

# richardh65/bct-tools:latest

jobs:
  build:
    name: Run Unit tests under ACE
    runs-on: ubuntu-latest
    steps:
      - name: Check out code repo
        uses: actions/checkout@v2
        with:
          path: code

      - name: checkout wiki
        uses: actions/checkout@v3
        with:
          repository: ${{github.repository}}.wiki
          path: wiki        

      - name: Run the build tests with Docker
        uses: addnab/docker-run-action@v3
        with:
          # image: richardh65/bct-tools:v10
          image: tdolby/experimental:ace-devcontainer-xvnc-12.0.7.0
          options: --env LICENSE=accept -v ${{ github.workspace }}:/tmp/work/other -w /tmp/work/other/code
          run: |
            # the mqsiprofile command needs to be run with the bash enabled, which conflicts with what a github runner in a container provides
            echo "======================== running from script v0.02 ========================="            
            /tmp/work/other/code/run-script.sh

            echo "======================== checking logs ========================="
            ls -la /tmp/bdd/FridayApplication-work-dir/config/common/log
            # copy logs to a working area to be picked up by the next step
            mkdir /tmp/work/other/code/trace
            cp /tmp/bdd/FridayApplication-work-dir/config/common/log/integration_server.FridayApplication-work-dir.userTrace.0.txt /tmp/work/other/code/trace/integration_server.FridayApplication-work-dir.userTrace.0.txt
            chmod 777 /tmp/work/other/code/trace
            chmod 777 /tmp/work/other/code/trace/*


      - name: fix permissions
        run: |
          echo "${{ github.workspace }}"
          ls -la ${{ github.workspace }}
          ls -la ${{ github.workspace }}/trace
          chmod 777 ${{ github.workspace }}/trace
          chmod 777 ${{ github.workspace }}/trace/*


                        
      - name: Process coverage
        uses: addnab/docker-run-action@v3
        with:
          image: richardh65/bct-tools:v11
          options: --env LICENSE=accept -v ${{ github.workspace }}:/tmp/work/other -w /tmp/work/other/code
          run: |            
            echo "======================== extracting coverage ========================="

            # ls -la /tmp/work/bct/lib
            ls -la /tmp/work/other/code/trace

            head -10 /tmp/work/other/code/trace/integration_server.FridayApplication-work-dir.userTrace.0.txt

            # run the trace collection
            ls -la
            pwd
            /usr/local/ant/apache-ant-1.10.12/bin/ant -f trace_build.xml
            
            ls -la /tmp/work/other/code/coveragetemp
            cat /tmp/work/other/code/coveragetemp
            
            /usr/local/sonar-scanner/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner -Dproject.settings=./sonar-project-tracing.properties
            ls -la
            ls -la /tmp/work/other/code/Github_diagrams
            pwd 
            head -10 BCT_report.sarif


      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: code/BCT_report.sarif

      # - name: Generate diagrams
      #  uses: addnab/docker-run-action@v3
      #  with:
      #    image: richardh65/bct-tools:v11
      #    options: --env LICENSE=accept -v ${{ github.workspace }}:/tmp/work/other/code -w /tmp/work/other/code
      #    run: |
      #      pwd
      #      ls -la
      #      cd code            
      #      ls -la *.prop*
      #      cat sonar-project-diagram.properties grep sonar.mb.flow.diagram.output
      #      cat sonar-project-diagram.properties grep sonar.projectName
      #      /usr/local/sonar-scanner/sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner -Dproject.settings=./sonar-project-diagram.properties
      #      ls -la
      #      echo ======= Github_diagrams ======
      #      ls -la Github_diagrams
      #      echo ======= Github_diagrams/other-diagram-1 ======
      #      ls -la Github_diagrams/other-diagram-1            
      #      echo ======= Github_diagrams/other-diagram-1/diagrams ======
            
            

      - name: wiki changes
        run: |
          cd wiki
          pwd
          ls -la
          echo ===== making dir          
          echo changing to diagrams          
          ls -la
          ls -la ../code/Github_diagrams
          ls -la ../code/Github_diagrams/other-diagram-1
          echo === copying files====
          cp -R ../code/Github_diagrams/other-diagram-1/* .
          echo === after copy ====
          ls -la
          git config user.name testuser
          git config user.email tetsuser@bct.com
          git add . | true
          git add -u
          git commit -m "Updating diagrams"
          git push





           
